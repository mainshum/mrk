---
import {Spec, PrismaClient, Doctor, City} from '@prisma/client';
import Main from '../../layouts/Main.astro';

interface Specialization {
    specName: string
    drs: Doctor[]
}

interface Props {
    specializations: Specialization[]
}

export async function getStaticPaths() {

    const prisma = new PrismaClient();

    const citiesWithDoctorsData = await prisma.city.findMany({
        include: {
            drs: true
        }
    });

    const specsData = await prisma.spec.findMany({});

    const reduceSection = (city: City) => (acc: Specialization[], spec: Spec) => {
        const doctorsInSection = citiesWithDoctorsData
            .flatMap(d => d.drs)
            .filter(dr => dr.city_id === city.id && dr.spec_id === spec.id);

        if (doctorsInSection.length === 0)
            return acc;
        
        return acc.concat({
            specName: spec.name,
            drs: doctorsInSection
        });
    }

    return citiesWithDoctorsData.map(c => ({
        params: ({city: c.name}),
        props: {specializations: specsData.reduce(reduceSection(c), [])}
    }));
}

const {specializations} = Astro.props;
const {city} = Astro.params;
---


<style>
    header {
        background: var(--primary-color);
        height: var(--header-h);
        display: flex;
        align-items: center;
        padding: 20px;
        color: var(--secondary-color);
    }
    .specializations {
        width: calc(100% + 2px);
        min-height: calc(100vh - var(--header-h));
        display: flex;
        flex-wrap: wrap;
        background: var(--primary-color);
        color: var(--secondary-color);
    }
    .spec:nth-child(n+1) {
        border-right: 2px solid var(--secondary-color);
        border-top: 2px solid var(--secondary-color);
        padding: 20px;
        flex-basis: calc(50% - 1px);
        flex-grow: 1;
        flex-shrink: 1;
    }
    .traits {
        list-style: none;
    }
    .traits li {
        padding: 10px 0px;
    }
</style>
<Main>
    <header>
        <h1>{city}</h1>
    </header>
    <section class="specializations">
        {specializations.map(s => (
            <div class="spec">
                <h2>{s.specName}</h2>
                {s.drs.map(d => (
                    <ul class="traits">
                        <li>{d.room}</li>
                        <li>{d.name}</li>
                        <li>{d.address}</li>
                        <li>{d.phone}</li>
                    </ul>
                ))}
            </div>
        ))}
    </section>
</Main>