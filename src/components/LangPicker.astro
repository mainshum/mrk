---
interface Props {
    currentLang: Lang
}
import pestka from '@images/pestka.svg';
import { allowed, Lang } from 'src/types';

const {currentLang} = Astro.props;

const langsTwice = allowed.concat(allowed)
const ind = allowed.findIndex(l => l === currentLang);

const langs = [langsTwice[ind], langsTwice[ind + 1], langsTwice[ind + 2]];

---


<style>
    img {
        width: 75px;
        height: 75px;
    }
    button {
        background: none;
        border: none;
        cursor: pointer;
        position: relative;
    }
    .lang-name {
        top: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        width: 100%;
        height: 100%;
        font-size: 2rem;
        color: var(--secondary-color);
    }
    .lang-name:hover {
        text-decoration: underline;
    }
    .lang-slider {
        transition: right 0.5s ease-out;
        /* border-left: 2px solid var(--primary-color); */
        transition-timing-function: ease-out;
        display: flex;
        position: absolute;
        right: calc(-2 * var(--header-h));
        width: calc(3 * var(--header-h));
        height: 100%;
    }
    .lang-slider.open {
        right: 0;
    }
    .currentLang {
        color: var(--orange-color);
    }
    .lang-wrapper {
        display: flex;
        justify-content: center;
        width: calc(var(--header-h));
    }
    .lang-wrapper:first-child {
        border-left: 2px solid ;
    }
    @media(max-width: 700px) {
        .lang-wrapper:first-child {
            border-left: none;
        }
    }
</style>

<div data-slider data-current-lang={currentLang} class="lang-slider">
    {langs.map(l => (
        <div class="lang-wrapper">
            <button data-lang={l}>
                <a href={`/${l}`}>
                    <span class:list={{currentLang: l === currentLang, 'lang-name': true}}>{l}</span>
                    <img alt="wybor-jezyka" width="75" height="75" src={pestka}  />
                </a>
            </button>
        </div>
    ))}
</div>

<script>
    const slider = document.querySelector('[data-slider]');
    const langButtons = document.querySelectorAll('[data-lang]');

    const handleClick = (event: Event) => {
        if (!slider)
            return;

        const {lang: langClicked}= (event.currentTarget as HTMLElement).dataset;
        const {currentLang} = (slider as HTMLElement).dataset;
        const isOpen = slider.classList.contains('open');

        if (!isOpen)  {
            event.preventDefault();
            return slider!.classList.add('open');
        } 

        if (langClicked === currentLang) {
            event.preventDefault();
            return slider!.classList.remove('open');
        }
    }

    for (const lb of langButtons) 
        lb.addEventListener('click', handleClick);

</script>